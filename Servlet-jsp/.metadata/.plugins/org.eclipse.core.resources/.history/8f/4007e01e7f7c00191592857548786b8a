package com.djs.util;

public class Driver {
	/**
	 * DriverManager：驱动的管理类
	 * 类方法，在不修改源代码的情况下，通过修改配置文件，
	 * 可以获取任何数据库的连接，从而达到解耦的目的
	 * @return 
	 * @throws Exception 
	 */
	public static Connection  getConnection() throws Exception {
		String jdbcUrl = null;
		String driverClass = null;
		String user = null;
		String password = null;
		
		//创建输入流来读取 src 下的 jdbc.propreties 文件,注意文件路径
		InputStream in = 
			JDBCTools.class.getClassLoader().
                                    getResourceAsStream("com/learning/JDBC/jdbc.properties");
		
		//从输入字节流（in）读取属性列表（键和元素对）。 
		Properties properties = new Properties();
		properties.load(in);
		//使用此属性列表中指定的键搜索属性，获取值
		jdbcUrl = properties.getProperty("jdbcUrl");
		driverClass = properties.getProperty("driver");
		user = properties.getProperty("user");
		password = properties.getProperty("password");
		in.close();	//关闭输入流
	
		//加载数据库驱动程序（对应 Driver 实现类中有注册驱动的静态代码块）
		Class.forName(driverClass);
		
		//获取与数据库的连接
		Connection connection = DriverManager.getConnection(jdbcUrl, user, password);
		
		return connection;
	}

}
